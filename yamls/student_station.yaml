heat_template_version: "2016-10-14"

description: Unit Exercise Student Station
#This script creates the student vm that integrates into the persistent network. Depends on persistent network existing, and then per-exercise yaml should be deployed after this. 

parameters:

  root_password:
    type: string
    label: Root Password
    description: Root password for student station
    default: "changeme"

  student_id:
    type: string
    label: Student ID
    description: Student ID Number
    constraints:
      -  allowed_pattern: "[0-2]?[0-9][0-9]"
         description: Student ID must be a numeric > 010 and < 250
    default: "100"

  vnc_password:
    type: string
    label: VNC Password
    description: VNC Password
    default: "password"

  student_network_uuid:
    type: string
    label: Student Network UUID
    description: UUID of the persistent student network object
    default: c7423992-560f-4205-ae99-1a2237f0bd8e

  student_network_sub_uuid:
    type: string
    label: Student Network Subnet UUID
    description: UUID of the persistent student network subnet object
    default: feb0180f-0390-44fd-8fb1-f78eb3110704

resources:
#unique string is used to randomize all instnce names, also provides entropy for scripts
#please don't remove this one. if you need more randomization, create another
  random-str:
    type: OS::Heat::RandomString
    properties:
      length: 8


  ex-stu-net:
    type: OS::Neutron::Net
    properties:
      name: ex_stu_net
    external_id: { get_param: student_network_uuid }

  ex-stu-net-sub:
    type: OS::Neutron::Subnet
    properties:
      cidr: 172.16.0.0/16
      gateway_ip: 172.16.0.1
      network: { get_resource: ex-stu-net }
      name: ex_stu_net_sub
    external_id: { get_param: student_network_sub_uuid }

#  ex-stu-net:
#    type: OS::Neutron::Net
#    properties:
#      name: test123
#    external_id: "public"

#  ex-stu-net-sub:
#    type: OS::Neutron::Subnet
#    external_id: "public_subnet"

#consists of VM and port to connect to student network

#student port
  ex-stu-net-ports-stu-station:
    type: OS::Neutron::Port    
    properties:
      port_security_enabled: false
      network_id: { get_resource: ex-stu-net }
      fixed_ips:
      - subnet_id: { get_resource: ex-stu-net-sub }
        ip_address:
          str_replace:
            template: 172.16.stuID.101
            params:
              stuID: { get_param: student_id }
    depends_on: [ex-stu-net, ex-stu-net-sub ]
#student station 
  ex-stu-station:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: ex_stu_station_stuID_randomStr
          params:
            stuID: { get_param: student_id }
            randomStr: { get_resource: random-str }
      image: Debian LXDE
      flavor: cy.medium
      networks:
        - port: { get_resource: ex-stu-net-ports-stu-station }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo "root:$password" | chpasswd
            sed -i 's/localhost.*/localhost boxHostname/g' /etc/hosts
            echo boxHostname>/etc/hostname
            apt-get update && apt-get upgrade && apt dist-upgrade -y
            apt-get install -y unattended-upgrades
            printf 'APT::Periodic::Enable "1";\nAPT::Periodic::Update-Package-Lists "1";\nAPT::Periodic::Unattended-Upgrade "1";\nAPT::Periodic::AutocleanInterval "7";' >> /etc/apt/apt.conf.d/02periodic
            sed -i 's/^\[SeatDefaults\]/\[SeatDefaults\]\nuser-session=mate\n/' /etc/lightdm/lightdm.conf
            egrep "^\[SeatDefaults" -A 2 /etc/lightdm/lightdm.conf
            echo 172.17.17.76 students exercises hack.lab lab labs exercises >> /etc/hosts
            sed -i 's/^PermitRootLogin.*/PermitRootLogin Yes/' /etc/ssh/sshd_config
            service ssh restart
            echo 172.17.17.76 students exercises hack.lab lab labs exercises >> /etc/cloud/templates/hosts.debian.tmpl
            echo 172.17.17.76 students exercises hack.lab lab labs exercises >> /etc/cloud/templates/hosts.suse.tmpl
            echo 172.17.17.76 students exercises hack.lab lab labs exercises >> /etc/cloud/templates/hosts.redhat.tmpl
            mkdir /root/Desktop -p; printf "#!/bin/sh\nfirefox http://labs/ &" > /root/Desktop/Launch\ Lab && chmod +x /root/Desktop/Launch\ Lab
            apt-get install -y mate-desktop-environment-core && apt-get install tightvncserver -y && umask 0077 && mkdir -p /root/.vnc && chmod go-rwx /root/.vnc && vncpasswd -f <<<"$VNCPASS" > /root/.vnc/passwd && printf '#!/bin/sh\n\n# Uncomment the following two lines for normal desktop:\nunset SESSION_MANAGER\nunset DBUS_SESSION_BUS_ADDRESS\n#. /etc/X11/xinit/xinitrc\n/usr/bin/mate-session\n\n[ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup\n[ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources\nxsetroot -solid grey\nvncconfig -iconic &\nx-terminal-emulator -geometry 80x24+10+10 -ls -title "$VNCDESKTOP Desktop" &\nx-window-manager &' > /root/.vnc/xstartup && chmod +x /root/.vnc/xstartup && printf "#!/bin/sh\nsleep 10 && DISPLAY=:0.0 USER=root HOME=/root /usr/bin/vncserver" > /bin/startvncserver && chmod +x /bin/startvncserver && printf '[Unit]\nDescription=TightVNC\n\n[Service]\nType=forking\nExecStart=/bin/startvncserver\nUser=root\n\n[Install]\nWantedBy=multi-user.target\nAlias=vncserver.service\n' > /lib/systemd/system/vncserver.service && systemctl enable vncserver.service && systemctl start vncserver.service && sleep 180 && echo "root:$password" | chpasswd && echo password successfully changed to $password|| echo failed to change password && reboot &
          params:
            $VNCPASS: { get_param: vnc_password}
            $password: { get_param: root_password}
            boxHostname: studentStation
      user_data_format: RAW



outputs:
 random_str:
    description: Random string used to seed student VMs
    value: { get_attr : [random-str, value] }


